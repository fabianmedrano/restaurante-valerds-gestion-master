security:
    erase_credentials: false
    always_authenticate_before_granting: false
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Usuarios:
          algorithm: plaintext

    providers:
#        in_memory: { memory: ~ }
        db_usuarios:
          entity:
            class: App\Entity\Usuarios

        # used to reload user from session & other features (e.g. switch_user)


        # used to reload user from session & other features (e.g. switch_user)

        # used to reload user from session & other features (e.g. switch_user)
      #  app_user_provider:
      #      id: App\Security\UserProvider

    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:    ^/
      #      http_basic: ~
            anonymous: ~
      #      anonymous: true
            provider: db_usuarios
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path:   /logout
                target: /
                success_handler: App\Service\LogoutSuccess
                invalidate_session: true
                delete_cookies: true
            access_denied_handler: App\Security\AccessDeniedHandler
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
          - { path: ^/principal, roles: ROLE_USUARIO }

          - { path: ^/mesero, roles: ROLE_MESERO }

          - { path: ^/pedido, roles: ROLE_CAJERO }

          - { path: ^/categorias, roles: ROLE_ADMIN }
          - { path: ^/usuarios, roles: ROLE_ADMIN }
          - { path: ^/menu, roles: ROLE_ADMIN }
          - { path: ^/facturas, roles: ROLE_ADMIN }
          -
            path: ^/inventario
            allow_if: "is_granted('ROLE_ADMIN') or is_granted('ROLE_INVENTARIO')"

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
